{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Plate_number_classification","version":"0.3.2","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"1nAUdyguZIoI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"outputId":"4376720e-700f-4fe6-adaf-688293aaa7e3","executionInfo":{"status":"ok","timestamp":1568631403363,"user_tz":-60,"elapsed":1776,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["from google.colab import drive\n","drive.mount('/gdrive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Drive already mounted at /gdrive; to attempt to forcibly remount, call drive.mount(\"/gdrive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"iyPRELJZ6RMH","colab_type":"code","colab":{}},"source":["# code to get and download the dataset\n","\n","# from fastai.vision import *\n","# path = Path(\"/gdrive/My Drive/plate_number_classification/\")\n","\n","# for file, folder in [('plate_number.csv', 'plate_number')]:\n","#     dest = path/folder\n","#     dest.mkdir(parents=True, exist_ok=True)\n","#     download_images(path/file, dest, max_pics=78)\n","\n","# for folder in ('plate_number'):\n","#     print(folder)\n","#     verify_images(path/folder, delete=True, max_size=500)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jVUxp1VFbDCS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"outputId":"cedfeba9-f9fa-47e8-cdf7-51c736ea3289","executionInfo":{"status":"ok","timestamp":1568631404683,"user_tz":-60,"elapsed":2816,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["from keras.preprocessing.image import ImageDataGenerator\n","\n","pic_size= 48\n","\n","batch_size = 128\n","\n","path = \"/gdrive/My Drive/plate_number_classification/Plate_number\"\n","\n","datagen_train = ImageDataGenerator()\n","datagen_validation = ImageDataGenerator()\n","\n","train_generator = datagen_train.flow_from_directory(path,\n","                                                    target_size=(pic_size,pic_size),\n","                                                    color_mode=\"grayscale\",\n","                                                    batch_size=batch_size,\n","                                                    class_mode='categorical',\n","                                                    shuffle=True)\n","\n","\n"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"stream","text":["Found 99 images belonging to 2 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"L8Y8sz34bh63","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":33},"outputId":"470abc04-4ebb-4e5e-c24f-415ad86a4a4d","executionInfo":{"status":"ok","timestamp":1568631404684,"user_tz":-60,"elapsed":2803,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["val_path = \"/gdrive/My Drive/plate_number_classification/\"\n","validation_generator = datagen_validation.flow_from_directory(val_path + \"validation\",\n","                                                    target_size=(pic_size,pic_size),\n","                                                    color_mode=\"grayscale\",\n","                                                    batch_size=batch_size,\n","                                                    class_mode='categorical',\n","                                                    shuffle=False)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Found 6 images belonging to 2 classes.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YBEta296biHO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":996},"outputId":"54281c7d-4ae9-4378-95f5-77dc8732db0e","executionInfo":{"status":"ok","timestamp":1568631406351,"user_tz":-60,"elapsed":4459,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["from keras.models import Sequential\n","from keras.layers.normalization import BatchNormalization\n","from keras.layers.convolutional import Conv2D\n","from keras.layers.convolutional import MaxPooling2D\n","from keras.layers.core import Activation\n","from keras.layers.core import Flatten\n","from keras.layers.core import Dropout\n","from keras.layers.core import Dense\n","\n","\n","model =  Sequential()\n","model.add(Conv2D(64,(3,3), padding='same', input_shape=(48, 48,1)))\n","model.add(BatchNormalization())\n","model.add(Activation('relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.2))\n","\n","\n","model.add(Conv2D(128,(5,5), padding='same'))\n","model.add(BatchNormalization())\n","model.add(Activation('relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","\n","model.add(Flatten())\n","model.add(Dense(256))\n","model.add(BatchNormalization())\n","model.add(Activation('relu'))\n","model.add(Dropout(0.25))\n","model.add(Dropout(0.2))\n","\n","\n","model.add(Dense(2, activation='softmax'))\n","\n","model.summary()"],"execution_count":14,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:2041: The name tf.nn.fused_batch_norm is deprecated. Please use tf.compat.v1.nn.fused_batch_norm instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_1 (Conv2D)            (None, 48, 48, 64)        640       \n","_________________________________________________________________\n","batch_normalization_1 (Batch (None, 48, 48, 64)        256       \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 48, 48, 64)        0         \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 24, 24, 64)        0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 24, 24, 64)        0         \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 24, 24, 128)       204928    \n","_________________________________________________________________\n","batch_normalization_2 (Batch (None, 24, 24, 128)       512       \n","_________________________________________________________________\n","activation_2 (Activation)    (None, 24, 24, 128)       0         \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 12, 12, 128)       0         \n","_________________________________________________________________\n","dropout_2 (Dropout)          (None, 12, 12, 128)       0         \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 18432)             0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 256)               4718848   \n","_________________________________________________________________\n","batch_normalization_3 (Batch (None, 256)               1024      \n","_________________________________________________________________\n","activation_3 (Activation)    (None, 256)               0         \n","_________________________________________________________________\n","dropout_3 (Dropout)          (None, 256)               0         \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 256)               0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 2)                 514       \n","=================================================================\n","Total params: 4,926,722\n","Trainable params: 4,925,826\n","Non-trainable params: 896\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OLhJP46obiRV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":70},"outputId":"e45a60dd-2911-4a2a-a494-125e8e181990","executionInfo":{"status":"ok","timestamp":1568631406352,"user_tz":-60,"elapsed":4448,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["model.compile(optimizer='adam', \n","              loss='categorical_crossentropy',\n","              metrics=['accuracy']\n","              )"],"execution_count":15,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Khu5Wtwzbibz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"6a59457b-5e5a-4fe8-e58e-a108b6a3dc8b","executionInfo":{"status":"ok","timestamp":1568632154013,"user_tz":-60,"elapsed":407383,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["epochs = 30\n","\n","history = model.fit_generator(generator=train_generator,\n","                                steps_per_epoch=5,\n","                                epochs=epochs,\n","                                validation_data = validation_generator,\n","                                )"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Epoch 1/30\n","5/5 [==============================] - 34s 7s/step - loss: 0.3250 - acc: 0.8687 - val_loss: 0.0411 - val_acc: 1.0000\n","Epoch 2/30\n","5/5 [==============================] - 13s 3s/step - loss: 0.0127 - acc: 0.9980 - val_loss: 0.0033 - val_acc: 1.0000\n","Epoch 3/30\n","5/5 [==============================] - 13s 3s/step - loss: 0.0069 - acc: 0.9980 - val_loss: 0.0050 - val_acc: 1.0000\n","Epoch 4/30\n","5/5 [==============================] - 13s 3s/step - loss: 0.0025 - acc: 1.0000 - val_loss: 0.0024 - val_acc: 1.0000\n","Epoch 5/30\n","5/5 [==============================] - 13s 3s/step - loss: 0.0014 - acc: 1.0000 - val_loss: 0.0013 - val_acc: 1.0000\n","Epoch 6/30\n","5/5 [==============================] - 13s 3s/step - loss: 0.0019 - acc: 1.0000 - val_loss: 9.9383e-04 - val_acc: 1.0000\n","Epoch 7/30\n","5/5 [==============================] - 13s 3s/step - loss: 8.3517e-04 - acc: 1.0000 - val_loss: 8.6537e-04 - val_acc: 1.0000\n","Epoch 8/30\n","5/5 [==============================] - 13s 3s/step - loss: 6.4876e-04 - acc: 1.0000 - val_loss: 8.7065e-04 - val_acc: 1.0000\n","Epoch 9/30\n","5/5 [==============================] - 13s 3s/step - loss: 8.0488e-04 - acc: 1.0000 - val_loss: 7.9960e-04 - val_acc: 1.0000\n","Epoch 10/30\n","5/5 [==============================] - 13s 3s/step - loss: 5.3567e-04 - acc: 1.0000 - val_loss: 6.8073e-04 - val_acc: 1.0000\n","Epoch 11/30\n","5/5 [==============================] - 13s 3s/step - loss: 3.8785e-04 - acc: 1.0000 - val_loss: 5.9755e-04 - val_acc: 1.0000\n","Epoch 12/30\n","5/5 [==============================] - 13s 3s/step - loss: 5.4331e-04 - acc: 1.0000 - val_loss: 5.0523e-04 - val_acc: 1.0000\n","Epoch 13/30\n","5/5 [==============================] - 13s 3s/step - loss: 4.0157e-04 - acc: 1.0000 - val_loss: 4.9115e-04 - val_acc: 1.0000\n","Epoch 14/30\n","5/5 [==============================] - 13s 3s/step - loss: 3.9554e-04 - acc: 1.0000 - val_loss: 6.3149e-04 - val_acc: 1.0000\n","Epoch 15/30\n","5/5 [==============================] - 13s 3s/step - loss: 4.1531e-04 - acc: 1.0000 - val_loss: 9.2331e-04 - val_acc: 1.0000\n","Epoch 16/30\n","5/5 [==============================] - 13s 3s/step - loss: 3.5707e-04 - acc: 1.0000 - val_loss: 0.0012 - val_acc: 1.0000\n","Epoch 17/30\n","5/5 [==============================] - 13s 3s/step - loss: 3.3180e-04 - acc: 1.0000 - val_loss: 0.0017 - val_acc: 1.0000\n","Epoch 18/30\n","5/5 [==============================] - 13s 3s/step - loss: 3.2824e-04 - acc: 1.0000 - val_loss: 0.0018 - val_acc: 1.0000\n","Epoch 19/30\n","5/5 [==============================] - 13s 3s/step - loss: 2.4305e-04 - acc: 1.0000 - val_loss: 0.0019 - val_acc: 1.0000\n","Epoch 20/30\n","5/5 [==============================] - 13s 3s/step - loss: 2.3793e-04 - acc: 1.0000 - val_loss: 0.0022 - val_acc: 1.0000\n","Epoch 21/30\n","5/5 [==============================] - 13s 3s/step - loss: 2.2014e-04 - acc: 1.0000 - val_loss: 0.0025 - val_acc: 1.0000\n","Epoch 22/30\n","5/5 [==============================] - 13s 3s/step - loss: 3.2852e-04 - acc: 1.0000 - val_loss: 0.0026 - val_acc: 1.0000\n","Epoch 23/30\n","5/5 [==============================] - 13s 3s/step - loss: 1.9918e-04 - acc: 1.0000 - val_loss: 0.0031 - val_acc: 1.0000\n","Epoch 24/30\n","5/5 [==============================] - 13s 3s/step - loss: 2.1959e-04 - acc: 1.0000 - val_loss: 0.0037 - val_acc: 1.0000\n","Epoch 25/30\n","5/5 [==============================] - 13s 3s/step - loss: 1.6123e-04 - acc: 1.0000 - val_loss: 0.0039 - val_acc: 1.0000\n","Epoch 26/30\n","5/5 [==============================] - 13s 3s/step - loss: 1.8953e-04 - acc: 1.0000 - val_loss: 0.0037 - val_acc: 1.0000\n","Epoch 27/30\n","5/5 [==============================] - 13s 3s/step - loss: 1.6206e-04 - acc: 1.0000 - val_loss: 0.0036 - val_acc: 1.0000\n","Epoch 28/30\n","5/5 [==============================] - 12s 2s/step - loss: 1.4454e-04 - acc: 1.0000 - val_loss: 0.0036 - val_acc: 1.0000\n","Epoch 29/30\n","5/5 [==============================] - 12s 2s/step - loss: 1.2409e-04 - acc: 1.0000 - val_loss: 0.0037 - val_acc: 1.0000\n","Epoch 30/30\n","5/5 [==============================] - 13s 3s/step - loss: 1.5790e-04 - acc: 1.0000 - val_loss: 0.0036 - val_acc: 1.0000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EvPflUS_bimA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"outputId":"eb47f202-a8f9-464e-c913-211521f00aef","executionInfo":{"status":"ok","timestamp":1568632276306,"user_tz":-60,"elapsed":978,"user":{"displayName":"Godwin Ekainu","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDmv8BB3ghUAY8fiJyJrjciCUYJr3v1f3a1eDeM3A=s64","userId":"00038308500188273176"}}},"source":["import numpy as np\n","\n","predictions = model.predict_generator(generator=validation_generator)\n","y_pred = [np.argmax(probas) for probas in predictions]\n","y_test = validation_generator.classes\n","class_names = validation_generator.class_indices.keys()\n","\n","print(y_pred)\n","print(y_test)"],"execution_count":23,"outputs":[{"output_type":"stream","text":["[0, 0, 0, 1, 1, 1]\n","[0 0 0 1 1 1]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vICRF32fw70h","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}